{"ast":null,"code":"var _jsxFileName = \"/home/aali7075/summer_projects/PathPlanningWebsite/src/ppviz/node/node.jsx\";\nimport React, { Component } from \"react\";\nimport \"./node.css\";\nexport default class Node extends Component {\n  //export is an include for class Node\n  onDragStart(ev, node_class) {\n    console.log(\"dragstart:\", node_class);\n    ev.dataTransfer.setData(\"class\", node_class);\n  }\n\n  render() {\n    //allows us to share code between react Components\n    const {\n      //set constant because our properties will always be 8\n      row_,\n      col_,\n      is_wall_,\n      is_end_,\n      is_start_,\n      onMouseDown,\n      // certain html on event handlers need a specific syntax\n      onMouseUp,\n      onMouseEnter\n    } = this.props;\n    let special_node_class;\n    let is_drag = \"false\";\n\n    if (is_start_) {\n      special_node_class = \"node-start\";\n      is_drag = \"true\";\n    }\n\n    if (is_end_) {\n      special_node_class = \"node-end\";\n      is_drag = \"true\";\n    }\n\n    if (is_wall_) {\n      special_node_class = \"node-wall\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      draggable: is_drag,\n      id: `node-${row_}-${col_}`,\n      className: `node ${special_node_class}`,\n      onDragStart: e => this.onDragStart(e, special_node_class),\n      onMouseDown: () => onMouseDown(row_, col_),\n      onMouseEnter: () => onMouseEnter(row_, col_),\n      onMouseUp: () => onMouseUp(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/aali7075/summer_projects/PathPlanningWebsite/src/ppviz/node/node.jsx"],"names":["React","Component","Node","onDragStart","ev","node_class","console","log","dataTransfer","setData","render","row_","col_","is_wall_","is_end_","is_start_","onMouseDown","onMouseUp","onMouseEnter","props","special_node_class","is_drag","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,YAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC1C;AAEAE,EAAAA,WAAW,CAACC,EAAD,EAAKC,UAAL,EAAiB;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AACAD,IAAAA,EAAE,CAACI,YAAH,CAAgBC,OAAhB,CAAwB,OAAxB,EAAiCJ,UAAjC;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AACJ;AACAC,MAAAA,IAFI;AAGJC,MAAAA,IAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA,SANI;AAOJC,MAAAA,WAPI;AAOS;AACbC,MAAAA,SARI;AASJC,MAAAA;AATI,QAUF,KAAKC,KAVT;AAWA,QAAIC,kBAAJ;AACA,QAAIC,OAAO,GAAG,OAAd;;AACA,QAAIN,SAAJ,EAAe;AACbK,MAAAA,kBAAkB,GAAG,YAArB;AACAC,MAAAA,OAAO,GAAG,MAAV;AACD;;AACD,QAAIP,OAAJ,EAAa;AACXM,MAAAA,kBAAkB,GAAG,UAArB;AACAC,MAAAA,OAAO,GAAG,MAAV;AACD;;AACD,QAAIR,QAAJ,EAAc;AACZO,MAAAA,kBAAkB,GAAG,WAArB;AACD;;AAED,wBACE;AACE,MAAA,SAAS,EAAEC,OADb;AAEE,MAAA,EAAE,EAAG,QAAOV,IAAK,IAAGC,IAAK,EAF3B;AAGE,MAAA,SAAS,EAAG,QAAOQ,kBAAmB,EAHxC;AAIE,MAAA,WAAW,EAAGE,CAAD,IAAO,KAAKnB,WAAL,CAAiBmB,CAAjB,EAAoBF,kBAApB,CAJtB;AAKE,MAAA,WAAW,EAAE,MAAMJ,WAAW,CAACL,IAAD,EAAOC,IAAP,CALhC;AAME,MAAA,YAAY,EAAE,MAAMM,YAAY,CAACP,IAAD,EAAOC,IAAP,CANlC;AAOE,MAAA,SAAS,EAAE,MAAMK,SAAS,EAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AA9CyC","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./node.css\";\n\nexport default class Node extends Component {\n  //export is an include for class Node\n\n  onDragStart(ev, node_class) {\n    console.log(\"dragstart:\", node_class);\n    ev.dataTransfer.setData(\"class\", node_class);\n  }\n\n  render() {\n    //allows us to share code between react Components\n    const {\n      //set constant because our properties will always be 8\n      row_,\n      col_,\n      is_wall_,\n      is_end_,\n      is_start_,\n      onMouseDown, // certain html on event handlers need a specific syntax\n      onMouseUp,\n      onMouseEnter,\n    } = this.props;\n    let special_node_class;\n    let is_drag = \"false\";\n    if (is_start_) {\n      special_node_class = \"node-start\";\n      is_drag = \"true\";\n    }\n    if (is_end_) {\n      special_node_class = \"node-end\";\n      is_drag = \"true\";\n    }\n    if (is_wall_) {\n      special_node_class = \"node-wall\";\n    }\n\n    return (\n      <div\n        draggable={is_drag}\n        id={`node-${row_}-${col_}`}\n        className={`node ${special_node_class}`}\n        onDragStart={(e) => this.onDragStart(e, special_node_class)}\n        onMouseDown={() => onMouseDown(row_, col_)}\n        onMouseEnter={() => onMouseEnter(row_, col_)}\n        onMouseUp={() => onMouseUp()}\n      ></div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}